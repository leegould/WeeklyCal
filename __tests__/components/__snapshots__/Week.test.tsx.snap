// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with expected args 1`] = `
<View
  style={
    Object {
      "alignItems": "stretch",
      "backgroundColor": "#F5FCFF",
      "flex": 1,
      "flexDirection": "column",
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "column",
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "gray",
          "flex": 1,
          "paddingBottom": 0,
          "paddingHorizontal": 5,
          "paddingTop": 5,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "beige",
            "borderRadius": 5,
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "flex-start",
            "margin": 5,
            "marginBottom": 2,
            "opacity": 1,
            "padding": 5,
          }
        }
      >
        <View
          accessible={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "borderBottomWidth": 0.5,
                "borderColor": "#C2272D",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginBottom": 3,
                "paddingBottom": 2,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "gray",
                  "fontSize": 14,
                  "opacity": 1,
                }
              }
            >
              Sun 25
            </Text>
            <View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": "green",
                        "fontSize": 18,
                      },
                      Object {
                        "backgroundColor": "transparent",
                      },
                      Object {
                        "fontFamily": "Material Design Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="iconIcon"
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
        <RCTScrollView
          ItemSeparatorComponent={[Function]}
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "backgroundColor": "gray",
          "flex": 3,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "padding": 5,
          "paddingTop": 0,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "beige",
              "borderRadius": 5,
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "margin": 5,
              "marginBottom": 2,
              "opacity": 1,
              "padding": 5,
            }
          }
        >
          <View
            accessible={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "#C2272D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 3,
                  "paddingBottom": 2,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "gray",
                    "fontSize": 14,
                    "opacity": 1,
                  }
                }
              >
                Mon 26
              </Text>
              <View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "green",
                          "fontSize": 18,
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                    testID="iconIcon"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "beige",
              "borderRadius": 5,
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "margin": 5,
              "marginBottom": 2,
              "opacity": 1,
              "padding": 5,
            }
          }
        >
          <View
            accessible={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "#C2272D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 3,
                  "paddingBottom": 2,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "gray",
                    "fontSize": 14,
                    "opacity": 1,
                  }
                }
              >
                Wed 28
              </Text>
              <View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "green",
                          "fontSize": 18,
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                    testID="iconIcon"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "beige",
              "borderRadius": 5,
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "margin": 5,
              "marginBottom": 2,
              "opacity": 1,
              "padding": 5,
            }
          }
        >
          <View
            accessible={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "#C2272D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 3,
                  "paddingBottom": 2,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "gray",
                    "fontSize": 14,
                    "opacity": 1,
                  }
                }
              >
                Fri 30
              </Text>
              <View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "green",
                          "fontSize": 18,
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                    testID="iconIcon"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "beige",
              "borderRadius": 5,
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "margin": 5,
              "marginBottom": 2,
              "opacity": 1,
              "padding": 5,
            }
          }
        >
          <View
            accessible={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "#C2272D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 3,
                  "paddingBottom": 2,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "gray",
                    "fontSize": 14,
                    "opacity": 1,
                  }
                }
              >
                Tue 27
              </Text>
              <View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "green",
                          "fontSize": 18,
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                    testID="iconIcon"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "beige",
              "borderRadius": 5,
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "margin": 5,
              "marginBottom": 2,
              "opacity": 1,
              "padding": 5,
            }
          }
        >
          <View
            accessible={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "#C2272D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 3,
                  "paddingBottom": 2,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "gray",
                    "fontSize": 14,
                    "opacity": 1,
                  }
                }
              >
                Thu 29
              </Text>
              <View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "green",
                          "fontSize": 18,
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                    testID="iconIcon"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
        <View
          style={
            Object {
              "backgroundColor": "beige",
              "borderRadius": 5,
              "flex": 1,
              "flexDirection": "column",
              "justifyContent": "flex-start",
              "margin": 5,
              "marginBottom": 2,
              "opacity": 1,
              "padding": 5,
            }
          }
        >
          <View
            accessible={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={null}
          >
            <View
              style={
                Object {
                  "borderBottomWidth": 0.5,
                  "borderColor": "#C2272D",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "marginBottom": 3,
                  "paddingBottom": 2,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "gray",
                    "fontSize": 14,
                    "opacity": 1,
                  }
                }
              >
                Sat 31
              </Text>
              <View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text
                    allowFontScaling={false}
                    style={
                      Array [
                        Object {
                          "color": "green",
                          "fontSize": 18,
                        },
                        Object {
                          "backgroundColor": "transparent",
                        },
                        Object {
                          "fontFamily": "Material Design Icons",
                          "fontStyle": "normal",
                          "fontWeight": "normal",
                        },
                        Object {},
                      ]
                    }
                    testID="iconIcon"
                  >
                    
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <RCTScrollView
            ItemSeparatorComponent={[Function]}
            data={Array []}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
      </View>
    </View>
  </View>
</View>
`;
